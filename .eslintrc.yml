# parser: babel-eslint
parserOptions:
  ecmaFeatures:
    jsx: false
  sourceType: module
plugins:
- babel
- node
- mocha
- promise
- unicorn
env:
  es2020: true
reportUnusedDisableDirectives: true
settings:
  node:
    tryExtensions: ['.js', '.cjs', '.mjs']

rules:
  for-direction: warn
  getter-return: warn
  no-async-promise-executor: warn
  no-compare-neg-zero: warn
  no-cond-assign: warn
  no-console: warn
  no-constant-condition: warn
  no-control-regex: warn
  no-debugger: error
  no-dupe-args: error
  no-dupe-keys: error
  no-duplicate-case: error
  no-empty: warn
  no-empty-character-class: error
  no-ex-assign: warn
  no-extra-boolean-cast: warn
  no-extra-parens:
  - warn
  - all
  - conditionalAssign: false
    returnAssign: false
    nestedBinaryExpressions: false
  no-extra-semi: error
  no-func-assign: error
  no-import-assign: error
  no-inner-declarations: warn
  no-invalid-regexp: error
  no-irregular-whitespace: error
  no-misleading-character-class: error
  no-obj-calls: error
  no-prototype-builtins: warn
  no-regex-spaces: warn
  no-sparse-arrays: warn
  no-template-curly-in-string: warn
  no-unexpected-multiline: error
  no-unreachable: warn
  no-unsafe-finally: warn
  no-unsafe-negation: error
  require-atomic-updates: warn
  use-isnan: error
  # valid-typeof: warn

  accessor-pairs: warn
  array-callback-return: warn
  block-scoped-var: error
  class-methods-use-this: warn
  consistent-return: warn
  curly: warn
  default-case: warn
  default-param-last: warn
  dot-location: ["warn", "property"]
  dot-notation: "warn"
  eqeqeq: error
  guard-for-in: warn
  no-alert: warn
  no-caller: error
  no-case-declarations: warn
  no-div-regex: warn
  no-eq-null: warn
  no-else-return: warn
  no-empty-function: warn
  no-empty-pattern: warn
  no-eval: error
  no-extend-native: error
  no-extra-bind: warn
  no-extra-label: warn
  no-fallthrough: warn
  no-floating-decimal: warn
  no-global-assign: error
  no-implicit-coercion: warn
  no-implicit-globals: error
  no-implied-eval: error
  # no-invalid-this: warn
  no-iterator: error
  no-labels: warn
  no-lone-blocks: warn
  no-loop-func: error
  no-multi-spaces: warn
  no-multi-str: warn
  no-new: warn
  no-new-func: error
  no-new-wrappers: error
  no-octal: error
  no-octal-escape: error
  no-proto: error
  no-redeclare: error
  no-restricted-properties:
  - warn
  - object: describe
    property: only
    message: remember not to commit tests using describe.only
  - object: it
    property: only
    message: remember not to commit tests using it.only
  no-return-assign: warn
  no-return-await: warn
  no-script-url: error
  no-self-assign: warn
  no-self-compare: warn
  no-sequences: error
  no-throw-literal: error
  no-unmodified-loop-condition: warn
  # no-unused-expressions: warn
  no-unused-labels: warn
  no-useless-call: warn
  no-useless-catch: warn
  no-useless-concat: warn
  no-useless-escape: warn
  no-useless-return: warn
  no-void: error
  no-with: error
  prefer-promise-reject-errors: ["warn", { "allowEmptyReject": true }]
  prefer-regex-literals: warn
  radix: ["warn", "always"]
  require-unicode-regexp: warn
  vars-on-top: warn
  wrap-iife: error
  yoda: ["warn", "never"]

  strict: error

  no-delete-var: error
  no-label-var: error
  no-restricted-globals: ["error", "event"]
  no-shadow: warn
  no-shadow-restricted-names: error
  no-undef: warn
  no-undef-init: warn
  no-undefined: warn
  no-unused-vars: warn
  no-use-before-define: ["error", { "functions": false, "classes": false }]

  global-require: warn
  handle-callback-err: ["warn", "^err(or)?$"]
  no-buffer-constructor: warn
  no-mixed-requires: ["warn", { "grouping": false, "allowCall": true }]
  no-new-require: error
  no-path-concat: warn
  no-process-env: warn
  no-process-exit: warn

  array-bracket-spacing: warn
  block-spacing: warn
  brace-style: ["warn", "1tbs", { "allowSingleLine": true }]
  camelcase: warn
  comma-dangle: ["warn", "always-multiline"]
  comma-spacing: warn
  comma-style: warn
  computed-property-spacing: warn
  consistent-this: warn
  eol-last: warn
  func-call-spacing: ["warn", "never"]
  func-name-matching: ["warn", { "considerPropertyDescriptor": true }]
  func-names: warn
  func-style: ["warn", "declaration", { "allowArrowFunctions": true }]
  function-call-argument-newline: ["warn", "consistent"]
  function-paren-newline: ["warn", "consistent"]
  implicit-arrow-linebreak: ["warn", "beside"]
  indent: ["warn", 2]
  key-spacing:
  - warn
  - singleLine: { "beforeColon": false, "afterColon": true, "mode": "strict" }
    multiLine: { "beforeColon": false, "afterColon": true, "mode": "minimum" }
  keyword-spacing: warn
  linebreak-style: error
  lines-between-class-members: warn
  max-len: ["warn", { "code": 96, "tabWidth": 8 }]
  max-nested-callbacks: warn
  max-statements-per-line: error
  multiline-comment-style: ["warn", "separate-lines"]
  multiline-ternary: ["warn", "always-multiline"]
  # new-cap: warn
  new-parens: warn
  newline-per-chained-call: ["warn", { "ignoreChainWithDepth": 3 }]
  no-array-constructor: warn
  no-bitwise: error
  no-continue: warn
  no-lonely-if: warn
  no-mixed-operators:
  - warn
  - groups:
    - ["+", "-", "*", "/", "%", "**", "&", "|", "^", "~", "<<", ">>", ">>>"]
    - ["==", "!=", "===", "!==", ">", ">=", "<", "<="]
    - ["&&", "||"]
    - ["in", "instanceof"]
  no-multiple-empty-lines: ["warn", { "max": 3, "maxEOF": 1 }]
  no-negated-condition: warn
  no-nested-ternary: error
  no-new-object: error
  no-tabs: error
  no-trailing-spaces: warn
  no-unneeded-ternary: warn
  no-whitespace-before-property: warn
  object-curly-newline:
  - warn
  - ObjectExpression:
      consistent: true
      multiline: true
    ObjectPattern: never
    ImportDeclaration: { "consistent": true }
    ExportDeclaration: { "consistent": true }
  # object-curly-spacing: ["warn", "always"]
  object-property-newline: ["warn", { "allowAllPropertiesOnSameLine": true }]
  one-var: ["warn", "never"]
  operator-assignment: warn
  operator-linebreak: ["warn", "before"]
  padded-blocks: ["warn", "never"]
  padding-line-between-statements:
  - warn
  - blankLine: always
    prev: directive
    next: "*"
  - blankLine: never
    prev: directive
    next: directive
  prefer-object-spread: warn
  quote-props: ["warn", "as-needed", { "keywords": true, "numbers": true }]
  # quotes: ["warn", "single", { "avoidEscape": true }]
  # semi: error
  semi-spacing: warn
  semi-style: ["error", "last"]
  space-before-blocks: warn
  space-before-function-paren: ["warn", "always"]
  space-in-parens: warn
  space-infix-ops: warn
  space-unary-ops: warn
  spaced-comment: warn
  switch-colon-spacing: warn
  template-tag-spacing: warn
  unicode-bom: error

  arrow-body-style: ["warn", "as-needed"]
  arrow-parens: warn
  arrow-spacing: warn
  constructor-super: warn
  generator-star-spacing: ["warn", "both"]
  no-class-assign: error
  no-const-assign: error
  no-dupe-class-members: error
  no-duplicate-imports: warn
  no-new-symbol: error
  no-this-before-super: warn
  no-useless-computed-key: warn
  no-useless-constructor: warn
  no-useless-rename: warn
  no-var: error
  object-shorthand: ["warn", "always", { "avoidExplicitReturnArrows": true }]
  prefer-const: warn
  prefer-numeric-literals: error
  prefer-rest-params: warn
  prefer-spread: warn
  prefer-template: warn
  require-yield: warn
  rest-spread-spacing: warn
  symbol-description: warn
  template-curly-spacing: warn
  yield-star-spacing: ["warn", "both"]

  node/no-extraneous-import: warn
  node/no-extraneous-require: warn
  node/no-missing-import: warn
  node/no-missing-require: warn
  node/no-unpublished-bin: warn
  node/no-unpublished-import: warn
  node/no-unpublished-require: warn
  node/no-unsupported-features/node-builtins: warn
  node/shebang: warn
  node/process-exit-as-throw: error
  node/no-deprecated-api: warn
  node/exports-style: error
  node/file-extension-in-import:
  - error
  - always
  - .js: never
  node/prefer-global/buffer: error
  node/prefer-global/console: error
  node/prefer-global/process: error
  node/prefer-global/text-decoder: error
  node/prefer-global/text-encoder: error
  node/prefer-global/url: error
  node/prefer-global/url-search-params: error
  node/prefer-promises/dns: warn
  node/prefer-promises/fs: warn

  promise/always-return: warn
  promise/catch-or-return: warn
  promise/no-nesting: warn

  unicorn/catch-error-name:
  - warn
  - name: err
  unicorn/consistent-function-scoping: warn
  unicorn/custom-error-definition: warn
  unicorn/error-message: warn
  unicorn/escape-case: warn
  unicorn/filename-case: warn
  unicorn/import-index: warn
  unicorn/new-for-builtins: warn
  unicorn/no-abusive-eslint-disable: error
  unicorn/no-array-instanceof: error
  unicorn/no-for-loop: warn
  unicorn/no-hex-escape: error
  unicorn/no-zero-fractions: warn
  unicorn/number-literal-case: warn
  unicorn/prefer-add-event-listener: warn
  unicorn/prefer-dataset: warn
  unicorn/prefer-event-key: warn
  unicorn/prefer-exponentiation-operator: warn
  unicorn/prefer-flat-map: warn
  unicorn/prefer-includes: warn
  unicorn/prefer-node-append: warn
  unicorn/prefer-node-remove: warn
  unicorn/prefer-query-selector: warn
  unicorn/prefer-reflect-apply: warn
  unicorn/prefer-starts-ends-with: warn
  unicorn/prefer-string-slice: warn
  unicorn/prefer-text-content: warn
  unicorn/prefer-type-error: warn
  unicorn/regex-shorthand: warn
  unicorn/throw-new-error: error

  new-cap: off
  babel/new-cap: warn
  no-invalid-this: off
  babel/no-invalid-this: warn
  object-curly-spacing: off
  babel/object-curly-spacing:
  - warn
  - always
  quotes: off
  babel/quotes:
  - warn
  - single
  - avoidEscape: true
  semi: off
  babel/semi: error
  no-unused-expressions: off
  babel/no-unused-expressions: warn
  valid-typeof: off
  babel/valid-typeof: warn

overrides:
- files: "**/*.spec.js"
  env:
    mocha: true
  rules:
    func-names: off
    max-lines: off
    babel/no-invalid-this: off
    babel/no-unused-expressions: off
    prefer-arrow-callback: off
    mocha/handle-done-callback: warn
    mocha/no-async-describe: error
    mocha/no-exclusive-tests: warn
    mocha/no-global-tests: error
    mocha/no-identical-title: warn
    mocha/no-mocha-arrows: error
    mocha/no-nested-tests: error
    mocha/no-return-and-callback: error
    mocha/no-return-from-async: error
    mocha/no-setup-in-describe: warn
    mocha/no-skipped-tests: warn
    mocha/no-top-level-hooks: error
